version: "3"

services:
  item-db:
    image: mysql:8.0
    container_name: item-db
    volumes:
      - ./init-db/item:/docker-entrypoint-initdb.d
    environment:
      MYSQL_DATABASE: item-db
      MYSQL_USER: user
      MYSQL_PASSWORD: user
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    ports:
      - '3306:3306'
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    networks:
      - stream-network

  order-db:
    image: mysql:8.0
    container_name: order-db
    volumes:
      - ./init-db/order:/docker-entrypoint-initdb.d
    environment:
      MYSQL_DATABASE: order-db
      MYSQL_USER: user
      MYSQL_PASSWORD: user
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    ports:
      - '3307:3306'
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    networks:
      - stream-network

  pay-db:
    image: mysql:8.0
    container_name: pay-db
    environment:
      MYSQL_DATABASE: order-db
      MYSQL_USER: user
      MYSQL_PASSWORD: user
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    ports:
      - '3308:3306'
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    networks:
      - stream-network

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - '2181:2181'
    networks:
      - stream-network

  kafka-1:
    container_name: kafka-1
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    networks:
      - stream-network

  kafka-2:
    container_name: kafka-2
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    ports:
      - '9093:9092'
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9093
      KAFKA_LISTENERS: PLAINTEXT://:9093
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    networks:
      - stream-network

  kafka-3:
    container_name: kafka-3
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    ports:
      - '9094:9092'
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:9094
      KAFKA_LISTENERS: PLAINTEXT://:9094
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    networks:
      - stream-network

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - '8080:8080'
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    environment:
      - KAFKA_CLUSTERS_0_NAME=stream-cluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka-1:9092,kafka-2:9093,kafka-3:9094
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    networks:
      - stream-network

  item-service:
    container_name: item-service
    build:
      context: ./item-service
      dockerfile: Dockerfile
    ports:
      - '8081:8080'
    depends_on:
      - item-db
      - kafka-1
      - kafka-2
      - kafka-3
    networks:
      - stream-network

  order-service:
    container_name: order-service
    build:
      context: ./order-service
      dockerfile: Dockerfile
    ports:
      - '8082:8080'
    depends_on:
      - order-db
      - kafka-1
      - kafka-2
      - kafka-3
    networks:
      - stream-network

  pay-service:
    container_name: pay-service
    build:
      context: ./pay-service
      dockerfile: Dockerfile
    ports:
      - '8083:8080'
    depends_on:
      - pay-db
      - kafka-1
      - kafka-2
      - kafka-3
    networks:
      - stream-network

networks:
  stream-network:
    driver: bridge